[tool.poetry]
name = "boosty-parser"
version = "0.0.0.post1.dev0+3354ec0"
description = "Boosty chat parser"
authors = ["KAWAI Shun <mypaceshun@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
  { include="boosty_parser/", from="src" }
]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
click = "^8.1.7"
rich = "^13.6.0"
poetry = "^1.6.1"
beautifulsoup4 = "^4.12.2"
lxml = "^4.9.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
flake8 = "^6.1.0"
pyproject-flake8 = "^6.1.0"
isort = "^5.12.0"
autoflake = "^2.2.1"
black = "^23.9.1"
mypy = "^1.6.0"
types-requests = "^2.31.0.9"
types-beautifulsoup4 = "^4.12.0.6"

[tool.poetry.scripts]
boosty-parser = "boosty_parser.command:cli"

[tool.poe]
envfile = ".env"

[tool.poe.tasks.run]
script = "boosty_parser.command:cli"
help = "run command"

[tool.poe.tasks.lint]
sequence = [
  { cmd = "pflake8 src/ tests/" },
  { cmd = "mypy src/" },
]
help = "check syntax"
ignore_fail = "return_non_zero"

[tool.poe.tasks.format]
sequence = [
  { cmd = "autoflake -ir --remove-all-unused-imports --ignore-init-module-imports src/ tests/" },
  { cmd = "isort src/ tests/" },
  { cmd = "black src/ tests/" },
  "lint"
]
help = "format code style"

[tool.poe.tasks.test]
cmd = "pytest --cov=src/ --cov-report=term --cov-report=html --cov-report=xml --junit-xml=report.xml $target"
args = [
  { name="target", default="tests/", options=["-t", "--target"], help="target directory"}
]
help = "run test"

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
max-complexity = 10

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.substitution]
files = [
"src/*/__init__.py",
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
